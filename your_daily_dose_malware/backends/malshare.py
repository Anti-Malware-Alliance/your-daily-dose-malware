import os

import requests
import click
from dotenv import load_dotenv
from rich.progress import Progress
from datetime import datetime as dt
load_dotenv()


def scrap_malshare():
    with Progress() as progress:
        api_key = os.getenv("MALSHARE_API_KEY")
        if api_key == "":
            click.echo("Skipping Malshare not api key", color=True)
            return None
        try:
            response = requests.post(
                "https://malshare.com/api.php",
                verify=True,
                params={"api_key": api_key, "action": "getlist"},
            )
            response.raise_for_status()
            hashes = response.json()
        except Exception as err:
            raise err
        try:
            print(f"  - Malshare: {len(hashes)} Samples")
            sha256_ids = [hashe["sha256"] for hashe in hashes]
            task = progress.add_task(
                "  - [green]Downloading Malware Files...", total=len(sha256_ids)
            )
            click.echo(f"	Your query yield {len(sha256_ids)} results")
            for sha256_id in sha256_ids:
                response = requests.post(
                    "https://malshare.com/api.php",
                    params={"api_key": api_key, "action": "getfile", "hash": sha256_id},
                    verify=True,
                )
                response.raise_for_status()
                curr_time = dt.now().date().strftime("%Y-%m-%d")
                with open(f"malware_{sha256_id[:6]}_{curr_time}.zip", "wb") as f:
                    f.write(response.content)
                    progress.update(task, advance=1)
        except Exception as err:
            raise err


scrap_malshare()
