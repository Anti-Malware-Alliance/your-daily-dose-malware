from typing import Annotated
import typer
from pathlib import Path
from rich.console import Console

# from .backends import malware_bazaar
from your_daily_dose_malware.backends.malshare import Malshare
from your_daily_dose_malware.constants import MALWARE_BANNER, MALWARE_DESCRIPTION
from your_daily_dose_malware.backends.malware_bazaar import MalwareBazaar
from your_daily_dose_malware.backends.virus_exchange import VirusExchangeScraper


app = typer.Typer()


@app.callback()
def callback():
    console = Console()
    console.print(MALWARE_BANNER)
    console.print(f"{MALWARE_DESCRIPTION} \n")


@app.command()
def malshare(
    path: str = typer.Option(None, help="path to save the downloaded malware samples"),
    not_twins: bool = typer.Option(
        False, help="do not download already downloaded malware samples"
    ),
    limit: int = typer.Option(0, help="number of malware samples to download"),
):
    "download the last 24 hours malware samples from malshare.com"
    if path is not None and Path(path).exists():
        Malshare.scrap_malshare(choosen_path=path, not_twins=not_twins, limit=limit)
    else:
        Malshare.scrap_malshare(limit=limit)


@app.command(name="m-bazaar")
def malware_bazaar(
    hundred: Annotated[
        bool,
        typer.Option(
            "--hundred",
            "-h",
            is_flag=True,
        ),
    ] = False,
    most_recent: Annotated[
        bool,
        "--most-recent",
        "-mr",
        typer.Option(
            is_flag=True,
        ),
    ] = False,
):
    """
    Scrap malshare.com and download the last 24 hours malware samples
    """
    if hundred is True and most_recent is False:
        MalwareBazaar.scrap_malware_bazaar(hundred_recent=True)
    elif hundred is False and most_recent is True:
        MalwareBazaar.scrap_malware_bazaar(hundred_recent=False)
    else:
        raise typer.BadParameter(
            "You must to choose either <hundred> or <most-recent> options"
        )
@app.command(name="virus-exchange")
def virus_exchange(
    email: str = typer.Option(..., help="Virus Exchange email"),
    password: str = typer.Option(..., help="Virus Exchange password"),
):
    """
    Log in to Virus Exchange and scrape malware samples
    """
    console = Console()
    console.print("Logging in to Virus Exchange...")

    # Initialize the scraper
    scraper = VirusExchangeScraper()
    
    # Attempt to log in
    if scraper.login(email, password):
        console.print("Login successful! Scraping samples...")
        samples = scraper.get_samples_data()
        console.print(samples)
        scraper.download_samples(samples)
        console.print("Sample scraping completed.")
    else:
        console.print("Login failed. Check your credentials and try again.")
