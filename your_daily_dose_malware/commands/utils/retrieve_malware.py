import click
import requests
import os


def hundred_most_recent(headers_info):
    response = requests.post(
        "https://mb-api.abuse.ch/api/v1/",
        data={"query": "get_recent", "selector": "100"},
        headers=headers_info,
    )
    json_response = response.json()
    if json_response["query_status"] == "no_selector":
        click.echo(
            "No selector provided. Please use either time or limit "
            "as selector",
            color=True,
        )
    if json_response["query_status"] == "unknown_selector":
        click.echo("Selector unknown. Please use either time or limit "
                   "as selector")
    if json_response["query_status"] == "no_results":
        click.echo("Your query yield no results")
    else:
        data_length = len(json_response["data"])
        click.echo(f"	Your query yield {data_length} results")
        for data in json_response["data"]:
            sha256_name = data["sha256_hash"]
            if os.path.exists(f"malware_{sha256_name[:4]}.zip"):
                continue
            response = requests.post(
                "https://mb-api.abuse.ch/api/v1/",
                data={"query": "get_file", "sha256_hash": sha256_name},
                headers=headers_info,
            )
            with open(f"malware_{sha256_name[:4]}.zip", "wb+") as f:
                f.write(response.content)
                click.echo(f"	malware_{sha256_name[:4]}.zip downloaded")


def all_most_recent(headers_info):
    response = requests.post(
        "https://bazaar.abuse.ch/export/txt/sha256/recent",
        headers=headers_info
    )
    with open("sha256_names.txt", "wb+") as f:
        f.write(response.content)
        f.seek(0)  # go back to the top of the file
        new_hashes = list()
        file_lines = [line.strip() for line in f.readlines()]
        for index, line in enumerate(file_lines, start=0):
            # skip the first 9 lines and last line
            if 8 < index < len(file_lines) - 1:
                click.echo(line)
                new_hashes.append(line)
            continue
    with open("sha256_names.txt", "w") as f:
        for line in new_hashes:
            f.write(line.decode("utf-8") + "\n")
    sha256_names = open("sha256_names.txt", "r").readlines()
    click.echo(f"	{len(sha256_names)} hashes downloaded")
    for sha256_hash in sha256_names:
        if os.path.exists(f"malware_{sha256_hash[:4]}.zip"):
            continue
        response = requests.post(
            "https://mb-api.abuse.ch/api/v1/",
            data={"query": "get_file", "sha256_hash": sha256_hash},
            headers=headers_info,
        )
        with open(f"malware_{sha256_hash[:4]}.zip", "wb") as f:
            f.write(response.content)
        click.echo(f"	malware_{sha256_hash[:4]}.zip downloaded")
